version: '3.5'

services:
  traefik:
    image: traefik:${TRAEFIK_VERSION:-2.2}
    container_name: ${COMPOSE_PROJECT_NAME:-traefik}_traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=frontend_network
      - --providers.docker.useBindPortIP=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      ## Custom certificates
#      - --providers.file.directory=/etc/traefik/dynamic

    volumes:
      ## Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      ## Custom certificates (set path also in dynamic/certificates.yml)
#      - ./certificates:/etc/ssl/path:ro
#      - ./dynamic/certificates.yml:/etc/traefik/dynamic/certificates.yml:ro
      ## Create a letsencrypt dir within the folder where the docker-compose file is
      #- ./letsencrypt:/letsencrypt
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: ${TRAEFIK_PORT:-8080}
        mode: host
      - target: 9000
        published: 9000
        mode: host
    networks:
      - frontend_network
    ## Dynamic section
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME:-traefik}_traefik.loadbalancer.server.port=8080
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_traefik.rule=Host(`traefik.example.com`)
      ## HTTPS only
#      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_traefik.tls=true

      ## BasicAuth (BCrypt or MD5 not SHA1) - https://www.htaccesstools.com/htpasswd-generator/
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_traefik.middlewares=${COMPOSE_PROJECT_NAME:-traefik}_auth-users
      ## In password type $ as $$
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME:-traefik}_auth-users.basicauth.users=traefik:$$2y$$10$$MxGYZbTQLhcfs40HR9wkLuzqYCwCtjVzGfhguf0RTk6sQQrRQqJS2

      ## Global redirection - this creates the redirect middleware and redirects all http requests to https
#      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_http-catchall.entrypoints=http
#      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_http-catchall.rule=hostregexp(`{host:.+}`)
      ##- traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_http-catchall.rule=HostRegexp(`{any:.*}`)
#      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-traefik}_http-catchall.middlewares=${COMPOSE_PROJECT_NAME:-traefik}_redirect-to-https
#      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME:-traefik}_redirect-to-https.redirectscheme.scheme=https

networks:
  frontend_network:
    external: true
